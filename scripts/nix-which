#!/usr/bin/env sh

# Resolves the full path of a command, following symlinks to their source
resolve_symlink() {
    local targetFile=$1

    cd "$(dirname "$targetFile")"
    targetFile=$(basename "$targetFile")

    # Iterate down a (possible) chain of symlinks
    while [ -L "$targetFile" ]; do
        targetFile=$(readlink "$targetFile")
        cd "$(dirname "$targetFile")"
        targetFile=$(basename "$targetFile")
    done

    # Compute the canonicalized absolute pathname
    local physDir=$(pwd -P)
    local result="$physDir/$targetFile"
    echo $result
}

# Extracts the package name from a Nix store path
extract_package_name() {
    local resolved_path="$1"
    # Extract the package name from the path, assumes format is /nix/store/<hash>-<pkgName>-<version>/...
    echo "$resolved_path" | awk -F'/' '{print $(NF-2)}' | cut -d'-' -f2
}

# Main script starts here
evaluate_mode=0
command_name=""

# Parse arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -e|--evaluate) evaluate_mode=1 ;;
        *) command_name="$1" ;;
    esac
    shift
done

if [[ -z "$command_name" ]]; then
    echo "Usage: $0 [-e|--evaluate] <command>"
    exit 1
fi

# Locate the command
full_path=$(which "$command_name" 2>/dev/null)

if [[ -z "$full_path" ]]; then
    echo "Command not found: $command_name"
    exit 2
fi

# Resolve to the original file if it is a symlink
resolved_path=$(resolve_symlink "$full_path")

if [[ "$evaluate_mode" -eq 1 ]]; then
    # Extract the package name and format for systemd module
    package_name=$(extract_package_name "$resolved_path")
    echo "\${pkgs.$package_name}/bin/$command_name"
else
    echo "$resolved_path"
fi
